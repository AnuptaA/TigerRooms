{"version":3,"sources":["img/misc/upload-file-svgrepo-com.svg","img/floorplans sync /^/.//.*_.*_.*/.png$","img/floorplans/Whitman_1981_0.png","img/floorplans/Whitman_1981_1.png","img/floorplans/Whitman_1981_2.png","img/floorplans/Whitman_1981_3.png","img/floorplans/Whitman_1981_4.png","img/floorplans/Whitman_Baker-E_0.png","img/floorplans/Whitman_Baker-E_1.png","img/floorplans/Whitman_Baker-E_2.png","img/floorplans/Whitman_Baker-E_3.png","img/floorplans/Whitman_Baker-E_4.png","img/floorplans/Whitman_Baker-S_0.png","img/floorplans/Whitman_Baker-S_1.png","img/floorplans/Whitman_Baker-S_2.png","img/floorplans/Whitman_Baker-S_3.png","img/floorplans/Whitman_Baker-S_4.png","img/floorplans/Whitman_Fisher_1.png","img/floorplans/Whitman_Fisher_2.png","img/floorplans/Whitman_Fisher_3.png","img/floorplans/Whitman_Hargadon_2.png","img/floorplans/Whitman_Hargadon_3.png","img/floorplans/Whitman_Hargadon_4.png","img/floorplans/Whitman_Lauritzen_0.png","img/floorplans/Whitman_Lauritzen_1.png","img/floorplans/Whitman_Lauritzen_2.png","img/floorplans/Whitman_Lauritzen_3.png","img/floorplans/Whitman_Lauritzen_4.png","img/floorplans/Whitman_Murley-Pivirotto_3.png","img/floorplans/Whitman_Murley-Pivirotto_4.png","img/floorplans/Whitman_Wendell-B_2.png","img/floorplans/Whitman_Wendell-B_3.png","img/floorplans/Whitman_Wendell-B_4.png","img/floorplans/Whitman_Wendell-C_2.png","img/floorplans/Whitman_Wendell-C_3.png","img/floorplans/Whitman_Wendell-C_4.png","img/misc/Excel_Sample.xlsx","img/misc/PDF_Sample.pdf","pages/FloorPlans.js","pages/FilterComponent.js","pages/HallFloor.js","pages/Logout.js","pages/UploadPDFs.js","Components/Footer.js","Components/NavBar.js","pages/Cart.js","pages/InvalidRoute.js","pages/MyGroup.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./Whitman_1981_0.png","./Whitman_1981_1.png","./Whitman_1981_2.png","./Whitman_1981_3.png","./Whitman_1981_4.png","./Whitman_Baker-E_0.png","./Whitman_Baker-E_1.png","./Whitman_Baker-E_2.png","./Whitman_Baker-E_3.png","./Whitman_Baker-E_4.png","./Whitman_Baker-S_0.png","./Whitman_Baker-S_1.png","./Whitman_Baker-S_2.png","./Whitman_Baker-S_3.png","./Whitman_Baker-S_4.png","./Whitman_Fisher_1.png","./Whitman_Fisher_2.png","./Whitman_Fisher_3.png","./Whitman_Hargadon_2.png","./Whitman_Hargadon_3.png","./Whitman_Hargadon_4.png","./Whitman_Lauritzen_0.png","./Whitman_Lauritzen_1.png","./Whitman_Lauritzen_2.png","./Whitman_Lauritzen_3.png","./Whitman_Lauritzen_4.png","./Whitman_Murley-Pivirotto_3.png","./Whitman_Murley-Pivirotto_4.png","./Whitman_Wendell-B_2.png","./Whitman_Wendell-B_3.png","./Whitman_Wendell-B_4.png","./Whitman_Wendell-C_2.png","./Whitman_Wendell-C_3.png","./Whitman_Wendell-C_4.png","webpackContext","req","id","webpackContextResolve","o","e","Error","code","keys","Object","resolve","AvailabilityTable","_ref","availabilityInfo","occupancy","minSquareFootage","maxFloors","length","Math","max","info","floors","React","createElement","className","src","alt","generateLink","resco","hall","floor","index","key","Array","_","rowIndex","colIndex","href","FloorPlans","location","useLocation","searchParams","URLSearchParams","search","resCollege","get","resCollegeForCookie","hallForCookie","floorForCookie","occupancyForCookie","minSquareFootageForCookie","setAvailabilityInfo","useState","useEffect","document","cookie","queryString","encodeURIComponent","endsWith","slice","fetch","then","response","ok","status","json","data","catch","error","console","FilterComponent","username","residentialCollege","setResidentialCollege","setHall","setFloor","setOccupancy","setMinSquareFootage","setError","squareFootageError","setSquareFootageError","navigate","useNavigate","htmlFor","value","onChange","target","style","borderColor","college","idx","disabled","Butler","Forbes","Mathey","Ncw","Rocky","Whitman","Yeh","hallOption","sz","occ","includes","Number","isInteger","placeholder","onClick","handleSubmit","url","queryParams","push","join","handleResetFilters","RoomInfoTable","_ref2","roomInfo","expandedRows","toggleExpandRow","handleSaveToggle","handleCreateReview","handleModifyReview","handleDisplayReview","hallName","adminStatus","border","cellPadding","oneRoomInfo","Fragment","width","height","backgroundColor","isAvailable","borderRadius","marginRight","name","userSelect","colSpan","size","total_saves","has_reviewed","room_id","isSaved","marginTop","padding","cursor","display","marginBottom","alignItems","HallFloor","log","MySwal","withReactContent","Swal","setRoomInfo","setExpandedRows","debouncing","setDebouncing","getCookie","cookies","split","cookieKey","cookieValue","rescoFromCookie","hallFromCookie","floorFromCookie","occupancyFromCookie","minSquareFootageFromCookie","imageSrc","require","submitReviewToDatabase","netid","rating","comments","review_date","method","headers","Content-Type","body","JSON","stringify","success","fire","prevRoomInfo","room","err","removeReviewFromDatabase","returnLink","filter","i","finally","setTimeout","title","html","focusConfirm","showCancelButton","confirmButtonText","cancelButtonText","preConfirm","_document$querySelect","querySelector","getElementById","showValidationMessage","currentDate","Date","reviewDate","Intl","DateTimeFormat","year","month","day","timeZone","format","hour","minute","second","hour12","parseInt","result","isConfirmed","ratingStars","querySelectorAll","forEach","star","addEventListener","getAttribute","checked","color","review","_document$querySelect2","selectedStar","text","icon","removeResult","reviewsHTML","repeat","customClass","popup","Logout","message","setMessage","credentials","res","window","logout_url","alert","process","UploadPDFs","fileName","setFileName","file","setFile","canSubmit","setCanSubmit","flexDirection","justifyContent","fontSize","fontWeight","textAlign","textTransform","letterSpacing","wordWrap","listStyleType","margin","download","textDecoration","onSubmit","async","event","preventDefault","allowOutsideClick","showLoading","hideLoading","formData","FormData","append","handleDivClick","click","image","type","accept","selectedFile","files","confirmButtonColor","cancelButtonColor","Footer","date","setDate","apiUrl","timestamp","fetchDate","NavBar","navigator","class","Cart","savedRooms","setSavedRooms","groupMembers","setGroupMembers","collapsedStates","setCollapsedStates","[object Object]","sortedRooms","saved_rooms","sort","a","b","availability","statusText","groupResponse","groupData","group_id","members","collapsedStatesInitial","reduce","states","member","savedRoomsByUser","memberResponse","memberSortedRooms","fetchSavedRooms","handleClearDrawnRooms","confirm","prevRooms","user","prevStates","toggleCollapse","room_number","undefined","handleUnsaveRoom","roomNumber","InvalidRoute","MyGroup","group","setGroup","setMembers","pendingMembers","setPendingMembers","pendingInvites","setPendingInvites","currentInviteIndex","setCurrentInviteIndex","newMemberNetID","setNewMemberNetID","loading","setLoading","pendingData","pending_members","invites","handleDeclineInvite","currentInvite","prev","updatedInvites","handleCreateGroup","groupId","handleAcceptInvite","pendingMember","inviteeNetID","invitee_netid","handleRemoveInvitation","handleAddMember","test","invitee","handleLeaveGroup","App","setUsername","setAdminStatus","auth","admin_status","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.24bb64ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/upload-file-svgrepo-com.36402c62.svg\";","var map = {\n\t\"./Whitman_1981_0.png\": 21,\n\t\"./Whitman_1981_1.png\": 22,\n\t\"./Whitman_1981_2.png\": 23,\n\t\"./Whitman_1981_3.png\": 24,\n\t\"./Whitman_1981_4.png\": 25,\n\t\"./Whitman_Baker-E_0.png\": 26,\n\t\"./Whitman_Baker-E_1.png\": 27,\n\t\"./Whitman_Baker-E_2.png\": 28,\n\t\"./Whitman_Baker-E_3.png\": 29,\n\t\"./Whitman_Baker-E_4.png\": 30,\n\t\"./Whitman_Baker-S_0.png\": 31,\n\t\"./Whitman_Baker-S_1.png\": 32,\n\t\"./Whitman_Baker-S_2.png\": 33,\n\t\"./Whitman_Baker-S_3.png\": 34,\n\t\"./Whitman_Baker-S_4.png\": 35,\n\t\"./Whitman_Fisher_1.png\": 36,\n\t\"./Whitman_Fisher_2.png\": 37,\n\t\"./Whitman_Fisher_3.png\": 38,\n\t\"./Whitman_Hargadon_2.png\": 39,\n\t\"./Whitman_Hargadon_3.png\": 40,\n\t\"./Whitman_Hargadon_4.png\": 41,\n\t\"./Whitman_Lauritzen_0.png\": 42,\n\t\"./Whitman_Lauritzen_1.png\": 43,\n\t\"./Whitman_Lauritzen_2.png\": 44,\n\t\"./Whitman_Lauritzen_3.png\": 45,\n\t\"./Whitman_Lauritzen_4.png\": 46,\n\t\"./Whitman_Murley-Pivirotto_3.png\": 47,\n\t\"./Whitman_Murley-Pivirotto_4.png\": 48,\n\t\"./Whitman_Wendell-B_2.png\": 49,\n\t\"./Whitman_Wendell-B_3.png\": 50,\n\t\"./Whitman_Wendell-B_4.png\": 51,\n\t\"./Whitman_Wendell-C_2.png\": 52,\n\t\"./Whitman_Wendell-C_3.png\": 53,\n\t\"./Whitman_Wendell-C_4.png\": 54\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","module.exports = __webpack_public_path__ + \"static/media/Whitman_1981_0.bd6de58b.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_1981_1.7348b982.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_1981_2.ac83ff6d.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_1981_3.8470f931.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_1981_4.c7289fbf.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Baker-E_0.f34839ab.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Baker-E_1.6b586356.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Baker-E_2.1168a306.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Baker-E_3.5546b8b0.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Baker-E_4.63a97a38.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Baker-S_0.6c6e2b40.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Baker-S_1.9da22c11.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Baker-S_2.b6525830.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Baker-S_3.7e13f44b.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Baker-S_4.70bb9223.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Fisher_1.c74528c8.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Fisher_2.c1367742.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Fisher_3.d90b0545.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Hargadon_2.0e8ce9af.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Hargadon_3.c2d4d2f9.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Hargadon_4.32f084fe.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Lauritzen_0.ff0b0e74.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Lauritzen_1.f0251bbc.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Lauritzen_2.542dd85b.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Lauritzen_3.f43753d1.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Lauritzen_4.258bfcc7.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Murley-Pivirotto_3.2df52372.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Murley-Pivirotto_4.1b7389de.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Wendell-B_2.02f85678.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Wendell-B_3.2908d517.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Wendell-B_4.fa5a94e0.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Wendell-C_2.16f9ca52.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Wendell-C_3.a0526f19.png\";","module.exports = __webpack_public_path__ + \"static/media/Whitman_Wendell-C_4.624b148c.png\";","module.exports = __webpack_public_path__ + \"static/media/Excel_Sample.dd0b28f7.xlsx\";","module.exports = __webpack_public_path__ + \"static/media/PDF_Sample.f462739a.pdf\";","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"../App.css\";\n\nconst FloorPlans = () => {\n  // Retrieve query params from URL using useLocation\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  // Get query parameters, defaulting to empty string if not found\n  const resCollege = searchParams.get(\"resco\");\n  const hall = searchParams.get(\"hall\");\n  const floor = searchParams.get(\"floor\");\n  const occupancy = searchParams.get(\"occupancy\");\n  const minSquareFootage = searchParams.get(\"minSquareFootage\");\n\n  const resCollegeForCookie = searchParams.get(\"resco\") || \"\";\n  const hallForCookie = searchParams.get(\"hall\") || \"\";\n  const floorForCookie = searchParams.get(\"floor\") || \"\";\n  const occupancyForCookie = searchParams.get(\"occupancy\") || \"\";\n  const minSquareFootageForCookie = searchParams.get(\"minSquareFootage\") || \"\";\n\n  const [availabilityInfo, setAvailabilityInfo] = useState([]);\n\n  useEffect(() => {\n    // Set cookies\n    document.cookie = `resco=${resCollegeForCookie}; path=/;`;\n    document.cookie = `hall=${hallForCookie}; path=/;`;\n    document.cookie = `floor=${floorForCookie}; path=/;`;\n    document.cookie = `occupancy=${occupancyForCookie}; path=/;`;\n    document.cookie = `minSquareFootage=${minSquareFootageForCookie}; path=/;`;\n  }, [\n    resCollegeForCookie,\n    hallForCookie,\n    floorForCookie,\n    occupancyForCookie,\n    minSquareFootageForCookie,\n  ]);\n\n  // Fetch unique halls and floors from the backend\n  useEffect(() => {\n    // Build the query string dynamically based on available params\n    let queryString = \"\";\n\n    if (resCollege) queryString += `resco=${encodeURIComponent(resCollege)}&`;\n    if (hall) queryString += `hall=${encodeURIComponent(hall)}&`;\n    if (floor) queryString += `floor=${encodeURIComponent(floor)}&`;\n    if (occupancy) queryString += `occupancy=${encodeURIComponent(occupancy)}&`;\n    if (minSquareFootage)\n      queryString += `minSquareFootage=${encodeURIComponent(\n        minSquareFootage\n      )}&`;\n\n    // Remove the trailing \"&\" if there's one\n    if (queryString.endsWith(\"&\")) queryString = queryString.slice(0, -1);\n\n    fetch(`/api/floorplans${queryString ? `?${queryString}` : \"\"}`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setAvailabilityInfo(data);\n      })\n      .catch((error) => console.error(\"Error fetching floor plans:\", error));\n  }, [resCollege, hall, floor, occupancy, minSquareFootage]);\n\n  return (\n    <div>\n      <h1 className=\"results-page-title\">\n        Showing results for all floor plans\n      </h1>\n      <h1 className=\"res-college-title\">\n        {/* Adding ternary comparator to handle case where resco isn't provided */}\n        {resCollege === null ? \"All Residential Colleges\" : resCollege}\n      </h1>\n      <AvailabilityTable availabilityInfo={availabilityInfo} occupancy={occupancy || \"\"} minSquareFootage={minSquareFootage || 0} />\n    </div>\n  );\n};\n\nconst AvailabilityTable = ({ availabilityInfo, occupancy, minSquareFootage }) => {\n  // Determine the maximum number of floors to set the number of rows\n  const maxFloors =\n    availabilityInfo.length > 0\n      ? Math.max(...availabilityInfo.map((info) => info.floors.length))\n      : 0;\n\n  // check if the response is not empty\n  if (availabilityInfo.length === 0) {\n    return (\n      <div>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <h2 className=\"res-college-title\">\n          No results matched your parameters\n        </h2>\n        <img id=\"lockup\" src=\"/misc/PU_lockup.png\" alt=\"lockup\" />\n      </div>\n    );\n  }\n\n  // Helper function to generate URL-friendly links\n  const generateLink = (resco, hall, floor) => {\n    let floorNum = floor[0];\n    return `../floorplans/hallfloor?resco=${resco}&hall=${hall}&floor=${floorNum}`;\n  };\n\n  return (\n    <div className=\"table-container-results\">\n      <table className=\"availability-table-all\">\n        <thead>\n          <tr>\n            {availabilityInfo.map((info, index) => (\n              <th key={index}>{info.hall}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody className=\"floorplan-table\">\n          {[...Array(maxFloors)].map((_, rowIndex) => (\n            <tr key={rowIndex}>\n              {availabilityInfo.map((info, colIndex) => (\n                <td key={colIndex}>\n                  {info.floors[rowIndex] ? (\n                    <a\n                      href={generateLink(\n                        \"Whitman\",\n                        info.hall,\n                        info.floors[rowIndex]\n                      )}\n                    >\n                      {info.floors[rowIndex]}\n                    </a>\n                  ) : (\n                    \"\"\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default FloorPlans;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../App.css\";\n\nconst FilterComponent = ({ username }) => {\n  const [residentialCollege, setResidentialCollege] = useState(\"\");\n  const [hall, setHall] = useState(\"\");\n  const [floor, setFloor] = useState(\"\");\n  const [occupancy, setOccupancy] = useState(\"\");\n  const [minSquareFootage, setMinSquareFootage] = useState(0); // New state for square footage filter\n  const [error, setError] = useState(false);\n  const [squareFootageError, setSquareFootageError] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  // Hardcoded list of residential colleges\n  const residentialColleges = [\n    \"Butler\",\n    \"Forbes\",\n    \"Mathey\",\n    \"Ncw\",\n    \"Rocky\",\n    \"Whitman\",\n    \"Yeh\",\n  ];\n\n  const collegeHalls = {\n    Butler: [\n      \"Yoseloff\",\n      \"Bogle\",\n      \"1976\",\n      \"1967\",\n      \"Bloomberg\",\n      \"Wilf\",\n      \"Scully\",\n    ],\n    Forbes: [\"Main\", \"Annex\"],\n    Mathey: [\"Blair\", \"Campbell\", \"Edwards\", \"Hamilton\", \"Joline\", \"Little\"],\n    Ncw: [\"Addy\", \"Kanji\", \"Kwanza-Jones\", \"Jose-Feliciano\"],\n    Rocky: [\"Buyers\", \"Campbell\", \"Holder\", \"Witherspoon\"],\n    Whitman: [\n      \"1981\",\n      \"Fisher\",\n      \"Lauritzen\",\n      \"Murley-Pivirotto\",\n      \"Wendell-B\",\n      \"Wendell-C\",\n      \"Baker-E\",\n      \"Baker-S\",\n    ],\n    Yeh: [\"Fu\", \"Grousbeck\", \"Hariri\", \"Mannion\"],\n  };\n\n  // Hardcoded floors for Wendell B Hall\n  const wendellBFloors = [0, 1, 2, 3, 4];\n\n  // Hardcoded occupancies for Wendell B Hall\n  const wendellBOccupancies = [1, 2, 3, 4];\n\n  const handleSubmit = () => {\n    // Check if the \"Residential College\" field is filled out\n    if (!residentialCollege) {\n      setError(true); // Show error if residentialCollege is not selected\n      return;\n    }\n\n    setError(false); // Reset error if residentialCollege is selected\n    setSquareFootageError(\"\"); // Reset square footage error if valid\n\n    // Build URL path based on filled fields\n    let url = \"/floorplans?\";\n    url += `resco=${encodeURIComponent(residentialCollege)}`;\n\n    // Create an array to hold query parameters\n    let queryParams = [];\n\n    // Add query parameters conditionally based on their presence\n    if (hall) {\n      queryParams.push(`hall=${encodeURIComponent(hall)}`);\n    }\n    if (floor) {\n      queryParams.push(`floor=${encodeURIComponent(floor)}`);\n    }\n    if (occupancy) {\n      queryParams.push(`occupancy=${encodeURIComponent(occupancy)}`);\n    }\n    if (minSquareFootage) {\n      queryParams.push(\n        `minSquareFootage=${encodeURIComponent(minSquareFootage)}`\n      );\n    }\n\n    // Append the query parameters to the base URL\n    if (queryParams.length > 0) {\n      url += \"&\" + queryParams.join(\"&\");\n    }\n\n    // Navigate to the constructed URL\n    navigate(url);\n\n    // navigate(`/floorplans`);\n  };\n\n  // Reset function to clear all selections\n  const handleResetFilters = () => {\n    setResidentialCollege(\"\");\n    setHall(\"\");\n    setFloor(\"\");\n    setOccupancy(\"\");\n    setMinSquareFootage(0); // Reset square footage filter\n    setError(false);\n    setSquareFootageError(\"\"); // Reset square footage error\n  };\n\n  return (\n    <div className=\"filter-container\">\n      <h1 className=\"filter-container-title\">Welcome to TigerRooms, {username}!</h1>\n      <br></br>\n      <h3 className=\"filter-container-subtitle\">\n        Looking for an available room?\n      </h3>\n      <div className=\"dropdown-container\">\n        <div className=\"dropdown-group\">\n          <label className=\"filter-label\" htmlFor=\"residentialCollege\">\n            Residential College*\n          </label>\n          <select\n            className=\"filter-select\"\n            id=\"residentialCollege\"\n            value={residentialCollege}\n            onChange={(e) => setResidentialCollege(e.target.value)}\n            style={{ borderColor: error ? \"red\" : \"\" }} // Highlight border if error\n          >\n            <option value=\"\" className=\"placeholder-option\">\n              Select Residential College\n            </option>\n            {residentialColleges.map((college, idx) => (\n              <option key={idx} value={college}>\n                {college}\n              </option>\n            ))}\n          </select>\n          {error && (\n            <p className=\"error-message\">\n              Please select a Residential College.\n            </p>\n          )}\n        </div>\n\n        <div className=\"dropdown-group\">\n          <label className=\"filter-label\" htmlFor=\"hall\">\n            Hall\n          </label>\n          <select\n            className=\"filter-select\"\n            id=\"hall\"\n            value={hall}\n            onChange={(e) => setHall(e.target.value)}\n            disabled={!residentialCollege} // Disable until Residential College is selected\n          >\n            <option value=\"\" className=\"placeholder-option\">\n              Select Hall\n            </option>\n            {residentialCollege &&\n              collegeHalls[residentialCollege].map((hallOption, idx) => (\n                <option key={idx} value={hallOption}>\n                  {hallOption}\n                </option>\n              ))}\n          </select>\n        </div>\n\n        <div className=\"dropdown-group\">\n          <label className=\"filter-label\" htmlFor=\"floor\">\n            Floor\n          </label>\n          <select\n            className=\"filter-select\"\n            id=\"floor\"\n            value={floor}\n            onChange={(e) => setFloor(e.target.value)}\n          >\n            <option value=\"\" className=\"placeholder-option\">\n              Select Floor\n            </option>\n            {wendellBFloors.map((sz, idx) => (\n              <option key={idx} value={sz}>\n                {sz}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"dropdown-group\">\n          <label className=\"filter-label\" htmlFor=\"occupancy\">\n            Occupancy\n          </label>\n          <select\n            className=\"filter-select\"\n            id=\"occupancy\"\n            value={occupancy}\n            onChange={(e) => setOccupancy(e.target.value)}\n          >\n            <option value=\"\" className=\"placeholder-option\">\n              Select Occupancy\n            </option>\n            {wendellBOccupancies.map((occ, idx) => (\n              <option key={idx} value={occ}>\n                {occ}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"dropdown-group\">\n          <label className=\"filter-label\" htmlFor=\"squareFootage\">\n            Minimum Square Footage\n          </label>\n          <input\n            id=\"squareFootage\"\n            value={minSquareFootage}\n            onChange={(e) => {\n              const value = e.target.value;\n              // Ensure the input value is a non-negative integer\n              if (\n                !value.includes(\"-\") && // Check for negative numbers\n                !value.includes(\"e\") && // Check for 'e' (scientific notation)\n                !value.includes(\".\") && // Check for decimals\n                !value.includes(\" \") && // Check for whitespace\n                Number.isInteger(Number(value)) && // Ensure it's an integer\n                Number(value) >= 0\n              ) {\n                setMinSquareFootage(value);\n                setSquareFootageError(\"\"); // Clear error if input is valid\n              } else {\n                setSquareFootageError(\"Please enter a valid positive integer.\");\n              }\n            }}\n            className=\"filter-select\"\n            placeholder=\"Enter min sqft\"\n          />\n          {squareFootageError && (\n            <p className=\"error-message\">{squareFootageError}</p>\n          )}\n        </div>\n      </div>\n\n      <div className=\"button-container\">\n        <button className=\"filter-submit-button\" onClick={handleSubmit}>\n          <strong>SUBMIT</strong>\n        </button>\n        <button className=\"filter-reset-button\" onClick={handleResetFilters}>\n          <strong>RESET</strong>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterComponent;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport \"../App.css\";\n\nconst HallFloor = ({ username, adminStatus }) => {\n  console.log(\"hallfloor route hit\");\n  // Retrieve query params from URL using useLocation\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const MySwal = withReactContent(Swal);\n\n  // State for room information and expanded rows\n  const [roomInfo, setRoomInfo] = useState([\n    {\n      name: \"Room 101\",\n      isAvailable: \"T\", // T for available, F for unavailable\n      size: \"200 sqft\",\n      occupancy: \"Single\",\n      total_saves: 10,\n      isSaved: false,\n      has_reviewed: false,\n    },\n  ]);\n  const [expandedRows, setExpandedRows] = useState([]);\n  const [debouncing, setDebouncing] = useState(false); // Debouncing state\n\n  // Get query parameters, defaulting to empty string if not found\n  const resCollege = searchParams.get(\"resco\");\n  const hall = searchParams.get(\"hall\");\n  const floor = searchParams.get(\"floor\");\n\n  const getCookie = (key) => {\n    const cookies = document.cookie.split(\"; \");\n    for (const cookie of cookies) {\n      const [cookieKey, cookieValue] = cookie.split(\"=\");\n      if (cookieKey === key) {\n        return cookieValue || \"\"; // Decode in case of encoded values\n      }\n    }\n    return \"\"; // Return empty string if the key isn't found\n  };\n\n  // Unpacking cookies\n  const rescoFromCookie = getCookie(\"resco\") || \"\";\n  const hallFromCookie = getCookie(\"hall\") || \"\";\n  const floorFromCookie = getCookie(\"floor\") || \"\";\n  const occupancyFromCookie = getCookie(\"occupancy\") || \"\";\n  const minSquareFootageFromCookie = getCookie(\"minSquareFootage\") || \"\";\n\n  // Fetch room data along with saved status for the user from the backend\n  useEffect(() => {\n    fetch(\n      `/api/floorplans/hallfloor?netid=${username}&hall=${hall}&floor=${floor}&occupancy=${occupancyFromCookie}&minSquareFootage=${minSquareFootageFromCookie}`\n    )\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setRoomInfo(data);\n      })\n      .catch((error) => console.error(\"Error fetching room data:\", error));\n  }, [floor, username]);\n\n  let imageSrc;\n\n  try {\n    imageSrc = require(`../img/floorplans/${resCollege}_${hall}_${floor}.png`);\n\n    console.log(imageSrc);\n  } catch (error) {\n    console.log(\"non-existent combination of resco, hall and floor\");\n\n    return (\n      <div className=\"floor-plan-error-container\">\n        <h1 className=\"floor-plan-error-message\">\n          No results matched your parameters\n        </h1>\n\n        <h3 className=\"floor-plan-error-message\">\n          Click{\" \"}\n          <a href=\"/\" className=\"back-to-floorplans\">\n            here\n          </a>{\" \"}\n          to do another search\n        </h3>\n      </div>\n    );\n  }\n\n  // Toggle row expansion\n  const toggleExpandRow = (index) => {\n    if (expandedRows.includes(index)) {\n      setExpandedRows(expandedRows.filter((i) => i !== index));\n    } else {\n      setExpandedRows([...expandedRows, index]);\n    }\n  };\n\n  // Handle Save/Unsave action with Debouncing\n  const handleSaveToggle = (room_id, isSaved) => {\n    if (debouncing) return; // Prevent further actions if debouncing\n\n    setDebouncing(true); // Start debouncing\n    const url = `/api/${isSaved ? \"unsave_room\" : \"save_room\"}`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        netid: username,\n        room_id: room_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // Update the saved status and total saves in the roomInfo state\n        setRoomInfo((prevRoomInfo) =>\n          prevRoomInfo.map((room) => {\n            if (room.room_id === room_id) {\n              // Prevent decreasing total_saves below 0\n              if (isSaved && room.total_saves === 0) {\n                return {\n                  ...room,\n                  isSaved: false, // Force the Save button to reappear\n                };\n              }\n              return {\n                ...room,\n                isSaved: !isSaved,\n                total_saves: isSaved\n                  ? room.total_saves - 1\n                  : room.total_saves + 1,\n              };\n            }\n            return room;\n          })\n        );\n      })\n      .catch((error) => console.error(\"Error toggling save status:\", error))\n      .finally(() => {\n        // End debouncing after a delay\n        setTimeout(() => {\n          setDebouncing(false);\n        }, 500); // Adjust delay as needed\n      });\n  };\n\n  // CREATED WITH THE HELP OF CHATGPT ****\n  const handleCreateReview = (room_id, username) => {\n    MySwal.fire({\n      title: \"Submit a review!\",\n      html: `<label for=\"rating\">Rating (1 to 5 stars):</label>\n        <div id=\"rating\" style=\"display: flex; justify-content: center; margin-bottom: 15px;\">\n          <input type=\"radio\" name=\"star\" value=\"1\" id=\"star1\" class=\"star\" style=\"display:none;\">\n          <input type=\"radio\" name=\"star\" value=\"2\" id=\"star2\" class=\"star\" style=\"display:none;\">\n          <input type=\"radio\" name=\"star\" value=\"3\" id=\"star3\" class=\"star\" style=\"display:none;\">\n          <input type=\"radio\" name=\"star\" value=\"4\" id=\"star4\" class=\"star\" style=\"display:none;\">\n          <input type=\"radio\" name=\"star\" value=\"5\" id=\"star5\" class=\"star\" style=\"display:none;\">\n          <div class=\"rating\" style=\"font-size: 2rem; cursor: pointer;\">\n            <span class=\"star-icon\" data-value=\"1\">★</span>\n            <span class=\"star-icon\" data-value=\"2\">★</span>\n            <span class=\"star-icon\" data-value=\"3\">★</span>\n            <span class=\"star-icon\" data-value=\"4\">★</span>\n            <span class=\"star-icon\" data-value=\"5\">★</span>\n          </div>\n        </div>\n        <textarea id=\"review-comments\" class=\"swal2-input\" placeholder=\"Write your review here...\" rows=\"6\" style=\"padding: 7.5px; height: 50px; width: 300px;\"></textarea>`,\n      focusConfirm: false,\n      showCancelButton: true,\n      confirmButtonText: \"Submit Review\",\n      cancelButtonText: \"Cancel\",\n      preConfirm: () => {\n        const rating = document.querySelector(\n          'input[name=\"star\"]:checked'\n        )?.value;\n        const comments = document.getElementById(\"review-comments\").value;\n\n        if (!rating || !comments) {\n          MySwal.showValidationMessage(\n            \"Please select a rating and write a comment\"\n          );\n          return false;\n        }\n\n        // Get the current date and time\n        const currentDate = new Date();\n        const formattedDate = new Intl.DateTimeFormat(\"en-US\", {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\",\n          timeZone: \"America/New_York\",\n        }).format(currentDate);\n\n        const formattedTime = new Intl.DateTimeFormat(\"en-US\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          second: \"2-digit\",\n          hour12: true,\n          timeZone: \"America/New_York\",\n        }).format(currentDate);\n\n        const reviewDate = `${formattedDate} ${formattedTime}`;\n\n        // Create the review object\n        return {\n          room_id: room_id,\n          netid: username,\n          rating: parseInt(rating),\n          comments: comments,\n          review_date: reviewDate,\n        };\n      },\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const { room_id, netid, rating, comments, review_date } = result.value;\n        submitReviewToDatabase(room_id, netid, rating, comments, review_date);\n      }\n    });\n\n    // Handle star rating click interaction\n    const ratingStars = document.querySelectorAll(\".star-icon\");\n    ratingStars.forEach((star) => {\n      star.addEventListener(\"click\", (e) => {\n        const value = e.target.getAttribute(\"data-value\");\n        document.querySelector(\n          `input[name=\"star\"][value=\"${value}\"]`\n        ).checked = true;\n        ratingStars.forEach((star) => (star.style.color = \"gray\")); // Reset color\n        for (let i = 0; i < value; i++) {\n          ratingStars[i].style.color = \"gold\"; // Highlight selected stars\n        }\n      });\n    });\n  };\n\n  const handleModifyReview = (room_id, username) => {\n    // Fetch the existing review\n    fetch(\"/api/reviews/get_review_of_user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ netid: username, room_id: room_id }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.success && data.review.comments) {\n          // Open SweetAlert to modify the review\n          MySwal.fire({\n            title: \"Modify your review.\",\n            html: `\n              <label for=\"rating\">Rating (1 to 5 stars):</label>\n              <div id=\"rating\" style=\"display: flex; justify-content: center; margin-bottom: 15px;\">\n                <input type=\"radio\" name=\"star\" value=\"1\" id=\"star1\" class=\"star\" style=\"display:none;\">\n                <input type=\"radio\" name=\"star\" value=\"2\" id=\"star2\" class=\"star\" style=\"display:none;\">\n                <input type=\"radio\" name=\"star\" value=\"3\" id=\"star3\" class=\"star\" style=\"display:none;\">\n                <input type=\"radio\" name=\"star\" value=\"4\" id=\"star4\" class=\"star\" style=\"display:none;\">\n                <input type=\"radio\" name=\"star\" value=\"5\" id=\"star5\" class=\"star\" style=\"display:none;\">\n                <div class=\"rating\" style=\"font-size: 2rem; cursor: pointer;\">\n                  <span class=\"star-icon\" data-value=\"1\">★</span>\n                  <span class=\"star-icon\" data-value=\"2\">★</span>\n                  <span class=\"star-icon\" data-value=\"3\">★</span>\n                  <span class=\"star-icon\" data-value=\"4\">★</span>\n                  <span class=\"star-icon\" data-value=\"5\">★</span>\n                </div>\n              </div>\n              <textarea id=\"review-comments\" class=\"swal2-input\" placeholder=\"Write your review here...\" rows=\"6\" style=\"padding: 7.5px; height: 50px; width: 300px;\">${data.review.comments}</textarea>\n              <br />\n              <button id=\"remove-review\" class=\"swal2-confirm swal2-styled\" style=\"background-color: red; color: white; margin-top: 15px;\">Remove Review</button>\n            `,\n            focusConfirm: false,\n            showCancelButton: true,\n            confirmButtonText: \"Modify Review\",\n            cancelButtonText: \"Cancel\",\n            preConfirm: () => {\n              const rating = document.querySelector(\n                'input[name=\"star\"]:checked'\n              )?.value;\n              const comments = document.getElementById(\"review-comments\").value;\n\n              if (!rating || !comments) {\n                MySwal.showValidationMessage(\n                  \"Please select a rating and write a comment\"\n                );\n                return false;\n              }\n\n              const currentDate = new Date();\n              const formattedDate = new Intl.DateTimeFormat(\"en-US\", {\n                year: \"numeric\",\n                month: \"2-digit\",\n                day: \"2-digit\",\n                timeZone: \"America/New_York\",\n              }).format(currentDate);\n\n              const formattedTime = new Intl.DateTimeFormat(\"en-US\", {\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n                second: \"2-digit\",\n                hour12: true,\n                timeZone: \"America/New_York\",\n              }).format(currentDate);\n\n              const reviewDate = `${formattedDate} ${formattedTime}`;\n\n              return {\n                room_id: room_id,\n                netid: username,\n                rating: parseInt(rating),\n                comments: comments,\n                review_date: reviewDate,\n              };\n            },\n          }).then((result) => {\n            if (result.isConfirmed) {\n              const { room_id, netid, rating, comments, review_date } =\n                result.value;\n\n              // Call the function to submit the modified review\n              submitReviewToDatabase(\n                room_id,\n                netid,\n                rating,\n                comments,\n                review_date\n              );\n            }\n          });\n\n          // Handle star rating click interaction\n          const ratingStars = document.querySelectorAll(\".star-icon\");\n          ratingStars.forEach((star) => {\n            star.addEventListener(\"click\", (e) => {\n              const value = e.target.getAttribute(\"data-value\");\n              document.querySelector(\n                `input[name=\"star\"][value=\"${value}\"]`\n              ).checked = true;\n              ratingStars.forEach((star) => (star.style.color = \"gray\"));\n              for (let i = 0; i < value; i++) {\n                ratingStars[i].style.color = \"gold\";\n              }\n            });\n          });\n\n          // Set the stars to match the current review rating\n          const selectedStar = data.review.rating;\n          for (let i = 0; i < selectedStar; i++) {\n            ratingStars[i].style.color = \"gold\";\n          }\n\n          // Set the corresponding radio button to checked\n          document.querySelector(\n            `input[name=\"star\"][value=\"${selectedStar}\"]`\n          ).checked = true;\n\n          // Add the event listener for removing the review\n          document\n            .getElementById(\"remove-review\")\n            .addEventListener(\"click\", () => {\n              MySwal.fire({\n                title: \"Are you sure?\",\n                text: \"Do you really want to remove your review?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Yes, remove it!\",\n                cancelButtonText: \"No, keep it\",\n              }).then((removeResult) => {\n                if (removeResult.isConfirmed) {\n                  // Call the function to delete the review\n                  removeReviewFromDatabase(room_id, username);\n                }\n              });\n            });\n        } else {\n          MySwal.fire(\"Error\", \"No review found for this room.\", \"error\");\n        }\n      })\n      .catch((err) => {\n        MySwal.fire(\n          \"Error\",\n          \"Something went wrong while fetching your review.\",\n          \"error\"\n        );\n        console.error(err);\n      });\n  };\n\n  const submitReviewToDatabase = (\n    room_id,\n    netid,\n    rating,\n    comments,\n    review_date\n  ) => {\n    fetch(\"/api/reviews/submit_review\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        room_id,\n        netid,\n        rating,\n        comments,\n        review_date,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.success) {\n          MySwal.fire(\n            \"Thank you!\",\n            \"Your review has been submitted successfully!\",\n            \"success\"\n          );\n\n          // Update the roomInfo state to reflect that the room has been reviewed\n          setRoomInfo((prevRoomInfo) =>\n            prevRoomInfo.map((room) =>\n              room.room_id === room_id ? { ...room, has_reviewed: true } : room\n            )\n          );\n        } else if (data.error) {\n          MySwal.fire(\n            \"Error.\",\n            data.error ||\n              \"Something went wrong while submitting your review. Please try again.\",\n            \"error\"\n          );\n        }\n      })\n      .catch((err) => {\n        MySwal.fire(\n          \"Error.\",\n          \"Something went wrong while submitting your review. Please try again.\",\n          \"error\"\n        );\n        console.error(err);\n      });\n  };\n\n  const removeReviewFromDatabase = (room_id, username) => {\n    fetch(\"/api/reviews/delete_review_of_user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        netid: username,\n        room_id: room_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.success) {\n          MySwal.fire(\n            \"Review Removed!\",\n            \"Your review has been successfully removed.\",\n            \"success\"\n          );\n\n          // Update the roomInfo state to reflect that the room has no review\n          setRoomInfo((prevRoomInfo) =>\n            prevRoomInfo.map((room) =>\n              room.room_id === room_id ? { ...room, has_reviewed: false } : room\n            )\n          );\n        } else if (data.error) {\n          MySwal.fire(\n            \"Error.\",\n            data.error ||\n              \"Something went wrong while removing your review. Please try again.\",\n            \"error\"\n          );\n        }\n      })\n      .catch((err) => {\n        MySwal.fire(\n          \"Error.\",\n          \"Something went wrong while removing your review. Please try again.\",\n          \"error\"\n        );\n        console.error(err);\n      });\n  };\n\n  const handleDisplayReview = (room_id, name) => {\n    fetch(\"/api/reviews/get_all_reviews\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        netid: username,\n        room_id: room_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.success) {\n          if (data.review && data.review.length > 0) {\n            // Construct the reviews HTML\n            const reviewsHTML = data.review\n              .map((review) => {\n                const { netid, rating, comments, review_date } = review;\n\n                return `\n                  <div class=\"review\" style=\"margin-bottom: 15px;\">\n                    <p style=\"margin: 5px 0;\"><strong>User:</strong> ${netid}\n                    <span style=\"margin-left: 10px;\"><strong>Rating:</strong> ${\"★\".repeat(\n                      rating\n                    )}${\"☆\".repeat(5 - rating)}</span></p>\n                    <p style=\"margin: 5px 0;\"><strong>Date:</strong> ${review_date}</p>\n                    <p style=\"margin: 5px 0;\"><strong>Review:</strong> ${comments}</p>\n                    <hr style=\"margin-top: 10px;\"/>\n                  </div>\n                `;\n              })\n              .join(\"\");\n\n            // Display reviews in a larger modal\n            MySwal.fire({\n              title: `Room ${name} Reviews`,\n              html: `<div style=\"max-height: 500px; width: 600px; overflow-y: auto; padding: 20px; text-align: left;\">${reviewsHTML}</div>`,\n              width: \"800px\",\n              showCancelButton: true,\n              cancelButtonText: \"Close\",\n              confirmButtonText: \"Okay\",\n              customClass: {\n                popup: \"larger-modal\",\n              },\n            });\n          } else {\n            // If no reviews are found\n            MySwal.fire({\n              title: \"No Reviews Found\",\n              text: `There are no reviews for Room ${name} yet.`,\n              icon: \"info\",\n              confirmButtonText: \"Okay\",\n            });\n          }\n        } else {\n          MySwal.fire(\"Error\", \"Failed to fetch reviews.\", \"error\");\n        }\n      })\n      .catch((err) => {\n        MySwal.fire(\n          \"Error\",\n          \"Something went wrong while fetching the reviews.\",\n          \"error\"\n        );\n        console.error(err);\n      });\n  };\n\n  const returnLink = `/floorplans?resco=${rescoFromCookie}&hall=${hallFromCookie}&floor=${floorFromCookie}&occupancy=${occupancyFromCookie}&minSquareFootage=${minSquareFootageFromCookie}`;\n\n  return (\n    <div className=\"floor-plan-flexbox\">\n      <div className=\"floor-plan-map\">\n        <h1 className=\"floor-plan-title\">\n          {resCollege + \" College, \" + hall + \" Hall, Floor \" + floor}\n        </h1>\n        <img src={imageSrc} alt=\"HallMap\" className=\"floor-plan-image\" />\n        <h3 className=\"back-link\">\n          Click{\" \"}\n          <a href={returnLink} className=\"back-to-floorplans\">\n            here\n          </a>{\" \"}\n          to return to floor plans list\n        </h3>\n      </div>\n      <div className=\"available-rooms-table\">\n        <RoomInfoTable\n          roomInfo={roomInfo}\n          expandedRows={expandedRows}\n          toggleExpandRow={toggleExpandRow}\n          handleSaveToggle={handleSaveToggle}\n          handleCreateReview={handleCreateReview}\n          handleModifyReview={handleModifyReview}\n          handleDisplayReview={handleDisplayReview}\n          hallName={hall}\n          adminStatus={!adminStatus}\n          username={username}\n        />\n      </div>\n    </div>\n  );\n};\n\n// RoomInfoTable component\nconst RoomInfoTable = ({\n  roomInfo,\n  expandedRows,\n  toggleExpandRow,\n  handleSaveToggle,\n  handleCreateReview,\n  handleModifyReview,\n  handleDisplayReview,\n  hallName,\n  adminStatus,\n  username,\n}) => {\n  return (\n    <table border=\"1\" cellPadding=\"10\" className=\"room-availability-table\">\n      <thead className=\"room-info-thead\">\n        <tr>\n          <th className=\"availability-table-th\">Availability Info</th>\n        </tr>\n      </thead>\n      <tbody>\n        {roomInfo.map((oneRoomInfo, index) => (\n          <React.Fragment key={index}>\n            <tr>\n              <td\n                className=\"availability-table-td\"\n                onClick={() => toggleExpandRow(index)}\n              >\n                <div className=\"availability\">\n                  <div\n                    style={{\n                      width: \"1.4vh\",\n                      height: \"1.4vh\",\n                      backgroundColor:\n                        oneRoomInfo.isAvailable === \"T\" ? \"green\" : \"red\",\n                      borderRadius:\n                        oneRoomInfo.isAvailable === \"T\" ? \"50%\" : \"0\",\n                      marginRight: \"1vw\",\n                    }}\n                  ></div>\n                  <strong>{oneRoomInfo.name}</strong>{\" \"}\n                </div>\n                <div style={{ userSelect: \"none\" }}>\n                  {expandedRows.includes(index) ? \"➖\" : \"➕\"}\n                </div>\n              </td>\n            </tr>\n            {expandedRows.includes(index) && (\n              <tr>\n                <td className=\"expanded-row-td\" colSpan=\"3\">\n                  <div\n                    className=\"expanded-content\"\n                    style={{ backgroundColor: \"#f9f9f9\" }}\n                  >\n                    <strong>{oneRoomInfo.size}</strong> <br />\n                    <strong>{oneRoomInfo.occupancy}</strong> <br />\n                    <strong>Total Saves: {oneRoomInfo.total_saves}</strong>\n                    <br />\n                    <div className=\"buttons-box\">\n                      {adminStatus && (\n                        <button\n                          onClick={() =>\n                            oneRoomInfo.has_reviewed\n                              ? handleModifyReview(\n                                  oneRoomInfo.room_id,\n                                  username\n                                )\n                              : handleCreateReview(\n                                  oneRoomInfo.room_id,\n                                  username\n                                )\n                          }\n                        >\n                          {oneRoomInfo.has_reviewed\n                            ? \"Modify Review\"\n                            : \"Write Review\"}\n                        </button>\n                      )}\n\n                      {adminStatus && (\n                        <button\n                          onClick={() =>\n                            handleDisplayReview(\n                              oneRoomInfo.room_id,\n                              oneRoomInfo.name\n                            )\n                          }\n                        >\n                          Display Reviews\n                        </button>\n                      )}\n                    </div>\n                    <div>\n                      <button\n                        onClick={() =>\n                          handleSaveToggle(\n                            oneRoomInfo.room_id,\n                            oneRoomInfo.isSaved\n                          )\n                        }\n                        style={{\n                          width: \"20%\",\n                          marginTop: \"1vh\",\n                          padding: \"0.25vh\",\n                          cursor: \"pointer\",\n                        }}\n                      >\n                        {oneRoomInfo.isSaved ? \"Unsave\" : \"Save\"}\n                      </button>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            )}\n          </React.Fragment>\n        ))}\n      </tbody>\n      <tfoot>\n        <tr>\n          <td id=\"availability-key-td\">\n            <strong>Draw Availability Key</strong>\n            <div style={{ display: \"block\", marginTop: \"10px\" }}>\n              <div\n                style={{\n                  marginBottom: \"5px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                <div\n                  style={{\n                    width: \"1vh\",\n                    height: \"1vh\",\n                    backgroundColor: \"green\",\n                    borderRadius: \"50%\",\n                    marginRight: \"0.5vh\",\n                  }}\n                ></div>\n                <span>Available</span>\n              </div>\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <div\n                  style={{\n                    width: \"1vh\",\n                    height: \"1vh\",\n                    backgroundColor: \"red\",\n                    marginRight: \"0.5vh\",\n                  }}\n                ></div>\n                <span>Unavailable</span>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n  );\n};\n\nexport default HallFloor;\n","import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\n\nconst Logout = () => {\n  const apiUrl = process.env.REACT_APP_API_URL;\n  const [message, setMessage] = useState(\"Error, please try again\");\n\n  useEffect(() => {\n    fetch(\"/logoutcas\", {\n      method: \"GET\",\n      credentials: \"include\",\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        window.location.href = data.logout_url; // Redirect to logout URL\n        setMessage(data.message);\n      })\n      .catch((err) => {\n        console.error(\"Error during logout:\", err);\n        alert(\"Something went wrong. Please try again.\");\n      });\n  }, [apiUrl]);\n\n  return (\n    <div>\n      <h1>{message}</h1>\n    </div>\n  );\n};\n\nexport default Logout;\n","import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport image from \"../img/misc/upload-file-svgrepo-com.svg\";\nimport \"../App.css\";\n\nconst UploadPDFs = ({ adminStatus }) => {\n  // displayed pdf filename and file itself\n  const [fileName, setFileName] = useState(\"No file selected\");\n  const [file, setFile] = useState(null);\n  const [canSubmit, setCanSubmit] = useState(true);\n  const MySwal = withReactContent(Swal);\n\n  // Check if the user is unauthorized\n  if (!adminStatus) {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"90vh\",\n          backgroundColor: \"#f4f4f4\",\n          padding: \"0 5vw\",\n        }}\n      >\n        <h1\n          style={{\n            color: \"red\",\n            fontSize: \"8vw\",\n            fontWeight: \"bold\",\n            textAlign: \"center\",\n            marginBottom: \"2vh\",\n            textTransform: \"uppercase\",\n            letterSpacing: \"2px\",\n            wordWrap: \"break-word\",\n          }}\n        >\n          Unauthorized Access\n        </h1>\n        <p\n          style={{\n            color: \"darkred\",\n            fontSize: \"4vw\",\n            fontWeight: \"bold\",\n            textAlign: \"center\",\n            marginTop: \"1vh\",\n            wordWrap: \"break-word\",\n          }}\n        >\n          You do not have permission to access this page. Please contact an\n          admin.\n        </p>\n      </div>\n    );\n  }\n\n  // get uploaded file, set filename and file\n  const handleFileChange = (event) => {\n    const selectedFile = event.target.files[0];\n    setFileName(selectedFile ? selectedFile.name : \"No file selected\");\n    setFile(selectedFile || null);\n  };\n\n  // make entire dashed box clickable\n  const handleDivClick = () => {\n    document.getElementById(\"upload-pdf\").click();\n  };\n\n  const handleReset = async (event) => {\n    event.preventDefault();\n\n    // Show confirmation dialog\n    MySwal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, reset it!\",\n    }).then(async (result) => {\n      // If confirmed, proceed with reset\n      if (result.isConfirmed) {\n        // Show loading message\n        MySwal.fire({\n          title: \"Loading...\",\n          html: \"Please wait a moment.\",\n          allowOutsideClick: false,\n        });\n        MySwal.showLoading();\n\n        // Perform reset action\n        const formData = new FormData();\n        formData.append(\"request-type\", 0); // request type for reset action\n\n        try {\n          const response = await fetch(\"/api/uploadpdf\", {\n            method: \"POST\",\n            body: formData,\n          });\n\n          const result = await response.json();\n\n          // Hide loading message\n          MySwal.hideLoading();\n\n          if (response.ok) {\n            MySwal.fire({\n              title: \"Reset Complete!\",\n              text: result.message,\n              icon: \"success\",\n            });\n          } else {\n            MySwal.fire({\n              icon: \"error\",\n              title: \"Oops...\",\n              text: result.error,\n            });\n          }\n        } catch (error) {\n          MySwal.fire({\n            icon: \"error\",\n            title: \"Oops...\",\n            text: \"An error occurred while resetting the file.\",\n          });\n        }\n      }\n    });\n  };\n\n  // wait for user to submit\n  const handleSubmit = async (event) => {\n    // prevent default and multiple submission\n    event.preventDefault();\n    if (!canSubmit) return;\n\n    setCanSubmit(false);\n    MySwal.fire({\n      title: \"Loading...\",\n      html: \"Please wait a moment.\",\n      allowOutsideClick: false,\n    });\n    MySwal.showLoading();\n\n    if (!file) {\n      //   alert(\"Please select a file to upload.\");\n      MySwal.hideLoading();\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: \"Please select a file to upload.\",\n      });\n      setCanSubmit(true);\n      return;\n    }\n\n    // store file into FormData object\n    const formData = new FormData();\n    formData.append(\"request-type\", 1); // request type\n    formData.append(\"rooms-pdf\", file); // file\n\n    // send POST request with file\n    try {\n      const response = await fetch(\"/api/uploadpdf\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      const result = await response.json();\n\n      // display server response\n      MySwal.hideLoading();\n      if (response.ok) {\n        MySwal.fire({\n          title: \"Thank you!\",\n          text: result.message,\n          icon: \"success\",\n        });\n      } else {\n        MySwal.fire({\n          icon: \"error\",\n          title: \"Oops...\",\n          text: result.error,\n        });\n      }\n    } catch (error) {\n      MySwal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: \"An error occurred while uploading the file.\",\n      });\n    }\n    setCanSubmit(true);\n  };\n\n  return (\n    <div className=\"pdf-upload-page-cont\">\n      <h1 id=\"pdf-upload-text\">\n        Upload the latest PDF here! Our students will thank you!\n      </h1>\n      <div id=\"file-links\" style={{ marginTop: \"2rem\", textAlign: \"center\" }}>\n        <h2 style={{ marginBottom: \"1.5rem\" }}>\n          Please refer to the following PDF format, generated from the sample\n          Excel file:\n        </h2>\n        <ul style={{ listStyleType: \"none\", padding: \"0\" }}>\n          <li style={{ marginBottom: \"1rem\" }}>\n            <h3 style={{ margin: \"0\" }}>\n              <a\n                href={require(\"../img/misc/Excel_Sample.xlsx\")}\n                download=\"Excel_Sample.xlsx\"\n                style={{\n                  textDecoration: \"none\",\n                  color: \"#007bff\",\n                }}\n              >\n                Excel_Sample.xlsx\n              </a>\n            </h3>\n          </li>\n          <li>\n            <h3 style={{ margin: \"0\" }}>\n              <a\n                href={require(\"../img/misc/PDF_Sample.pdf\")}\n                download=\"PDF_Sample.pdf\"\n                style={{\n                  textDecoration: \"none\",\n                  color: \"#007bff\",\n                }}\n              >\n                PDF_Sample.pdf\n              </a>\n            </h3>\n          </li>\n        </ul>\n      </div>\n\n      <div id=\"upload-pdfs-cont\">\n        <form id=\"pdf-form\" onSubmit={handleSubmit}>\n          <div id=\"file-upload\" onClick={handleDivClick}>\n            <label htmlFor=\"upload-pdf\">\n              <img src={image} alt=\"Upload\" />\n              <span className=\"pdf-text\"> Drag & Drop </span>\n              <span className=\"pdf-text\"> or browse</span>\n            </label>\n            <input\n              type=\"file\"\n              id=\"upload-pdf\"\n              name=\"rooms-pdf\"\n              accept=\".pdf\"\n              onChange={handleFileChange}\n              style={{ display: \"none\" }}\n            />\n            <small>Supports: PDF</small>\n            <div className=\"uploaded-file-name\">\n              <span>Uploaded file:</span>&nbsp;<span>{fileName}</span>\n            </div>\n          </div>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n      <div>\n        <button id=\"reset-pdf-btn\" onClick={handleReset}>\n          Reset Database\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default UploadPDFs;\n","import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\n\nconst Footer = () => {\n  const [date, setDate] = useState(\"\"); // State to store the updated time\n  const apiUrl = process.env.REACT_APP_API_URL;\n\n  useEffect(() => {\n    // Fetch the updated time when the component mounts\n    const fetchDate = async () => {\n      try {\n        const response = await fetch(`${apiUrl}/api/getupdatedtime`, {\n          method: \"GET\",\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setDate(data.timestamp); // Assuming the API returns a timestamp field\n        } else {\n          console.error(\"Error fetching date:\", response.status);\n        }\n      } catch (error) {\n        console.error(\"Fetch error:\", error);\n      }\n    };\n\n    fetchDate();\n  }, [apiUrl]); // Run effect when the component mounts or when apiUrl changes\n\n  return (\n    <footer>\n      <img id=\"lockup\" src=\"/misc/PU_lockup.png\" alt=\"lockup\" />\n      <div id=\"middle-text-cont\">\n        <ul>\n          <li id=\"update-text\">\n            Last Updated:{\" \"}\n            <span id=\"timestamp\">{date ? date : \"Loading...\"}</span>\n          </li>\n          <li>Website created by TigerRooms group (COS333 Fall '24 Project)</li>\n        </ul>\n      </div>\n      <div className=\"right-text-cont\">\n        <p>TigerRooms</p>\n        <p>© 2024 The Trustees of Princeton University</p>\n        <p>\n          <a href=\"https://www.princeton.edu/content/copyright-infringement\">\n            Copyright Infringement{\" \"}\n          </a>{\" \"}\n          |\n          <a href=\"https://www.princeton.edu/privacy-notice\">\n            {\" \"}\n            Privacy Notice{\" \"}\n          </a>\n        </p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../App.css\";\n\nconst NavBar = ({ adminStatus }) => {\n  const navigator = useNavigate();\n  return (\n    <nav>\n      <div class=\"logo-cont\">\n        <img id=\"logo\" src=\"/misc/princeton-logo.png\" alt=\"Princeton\" />\n      </div>\n      <ul id=\"nav-options\">\n        <li>\n          <ul id=\"left-options\">\n            <li>\n              <a href=\"/\">Home</a>\n            </li>\n            <li>\n              <a href=\"/mygroup\">MyGroup</a>\n            </li>\n            <li>\n              <a href=\"/floorplans\">Floor Plans</a>\n            </li>\n            {adminStatus && (\n              <li>\n                <a href=\"/upload-pdfs\">Upload PDFs</a>\n              </li>\n            )}\n          </ul>\n        </li>\n        <li>\n          <ul id=\"right-options\">\n            <li>\n              <a href=\"/logout\">Log Out</a>\n            </li>\n            <li>\n              <button\n                id=\"cart-btn\"\n                onClick={() => {\n                  navigator(\"/cart\");\n                }}\n              >\n                <img id=\"cart-svg\" src=\"/misc/cart.svg\" alt=\"View Cart\" />\n              </button>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\n\nconst Cart = ({ username }) => {\n  const [savedRooms, setSavedRooms] = useState({});\n  const [groupMembers, setGroupMembers] = useState([username]); // Start with the user only\n  const [collapsedStates, setCollapsedStates] = useState({ [username]: false }); // User's section starts expanded\n\n  // Fetch saved rooms for the user\n  useEffect(() => {\n    const fetchSavedRooms = async () => {\n      try {\n        // Fetch the user's saved rooms\n        const response = await fetch(`/api/saved_rooms?user_id=${username}`);\n        let sortedRooms = []; // Define sortedRooms here\n        if (response.ok) {\n          const data = await response.json();\n          sortedRooms = data.saved_rooms.sort((a, b) => {\n            return b.availability - a.availability;\n          });\n          setSavedRooms({ [username]: sortedRooms });\n        } else {\n          console.error(\n            `Error fetching saved rooms for ${username}: ${response.statusText}`\n          );\n          setSavedRooms({ [username]: [] }); // Show an empty state if there's an error\n        }\n\n        // Optionally, fetch group data if the user is in a group\n        const groupResponse = await fetch(`/api/my_group`);\n        const groupData = await groupResponse.json();\n        if (groupData.group_id && groupData.members.length > 1) {\n          setGroupMembers(groupData.members);\n          const collapsedStatesInitial = groupData.members.reduce(\n            (states, member) => {\n              states[member] = member !== username; // Collapse others, keep the user expanded\n              return states;\n            },\n            {}\n          );\n          setCollapsedStates(collapsedStatesInitial);\n\n          // Fetch saved rooms for group members\n          const savedRoomsByUser = { [username]: sortedRooms }; // Use sortedRooms here\n          for (const member of groupData.members) {\n            if (member !== username) {\n              try {\n                const memberResponse = await fetch(\n                  `/api/saved_rooms?user_id=${member}`\n                );\n                if (memberResponse.ok) {\n                  const memberData = await memberResponse.json();\n                  const memberSortedRooms = memberData.saved_rooms.sort(\n                    (a, b) => {\n                      return b.availability - a.availability;\n                    }\n                  );\n                  savedRoomsByUser[member] = memberSortedRooms;\n                } else {\n                  console.error(\n                    `Error fetching saved rooms for ${member}: ${memberResponse.statusText}`\n                  );\n                }\n              } catch (error) {\n                console.error(\n                  `Error fetching saved rooms for ${member}:`,\n                  error\n                );\n              }\n            }\n          }\n          setSavedRooms(savedRoomsByUser);\n        }\n      } catch (error) {\n        console.error(\"Error fetching saved room or group data:\", error);\n      }\n    };\n\n    fetchSavedRooms();\n  }, [username]);\n\n  // Toggle collapse/expand state\n  const toggleCollapse = (user) => {\n    setCollapsedStates((prevStates) => ({\n      ...prevStates,\n      [user]: !prevStates[user],\n    }));\n  };\n\n  // Handle room unsave\n  const handleUnsaveRoom = (roomNumber, hall) => {\n    const confirmed = window.confirm(\n      \"Are you sure you want to remove this room from your cart?\"\n    );\n    if (!confirmed) return;\n\n    fetch(\"/api/unsave_room\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        netid: username,\n        room_number: roomNumber,\n        hall: hall,\n      }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`Failed to unsave room: ${response.statusText}`);\n        }\n        return response.json();\n      })\n      .then(() => {\n        setSavedRooms((prevRooms) => ({\n          ...prevRooms,\n          [username]: prevRooms[username].filter(\n            (room) => !(room.room_number === roomNumber && room.hall === hall)\n          ),\n        }));\n      })\n      .catch((error) => console.error(\"Error unsaving room:\", error));\n  };\n\n  // Handle clearing all drawn rooms\n  const handleClearDrawnRooms = () => {\n    const confirmed = window.confirm(\n      \"Are you sure you want to clear all drawn rooms from the cart?\"\n    );\n    if (!confirmed) return;\n\n    fetch(\"/api/clear_drawn_rooms\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ netid: username }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\n            `Failed to clear drawn rooms: ${response.statusText}`\n          );\n        }\n        return response.json();\n      })\n      .then(() => {\n        setSavedRooms((prevRooms) => ({\n          ...prevRooms,\n          [username]: prevRooms[username].filter(\n            (room) => room.availability === true\n          ),\n        }));\n      })\n      .catch((error) => console.error(\"Error clearing drawn rooms:\", error));\n  };\n\n  return (\n    <div className=\"cart-page\">\n      <h1 className=\"cart-title\">Saved Rooms</h1>\n      {groupMembers.map((member) => (\n        <div key={member} className=\"saved-rooms-section\">\n          <h2\n            className=\"saved-rooms-title\"\n            onClick={() => toggleCollapse(member)}\n            style={{ cursor: \"pointer\" }}\n          >\n            {member === username\n              ? \"Your Saved Rooms\"\n              : `Saved Rooms for ${member}`}{\" \"}\n            {collapsedStates[member] ? \"➕\" : \"➖\"}\n          </h2>\n          {!collapsedStates[member] && (\n            <>\n              {savedRooms[member] && savedRooms[member].length > 0 ? (\n                <table className=\"saved-rooms-table\">\n                  <thead>\n                    <tr>\n                      <th>Room</th>\n                      <th>Total Saves</th>\n                      <th>Availability</th>\n                      {member === username && <th></th>}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {savedRooms[member].map((room, index) => (\n                      <tr key={index}>\n                        <td>{`${room.hall} ${room.room_number}`}</td>\n                        <td>\n                          {room.total_saves !== undefined\n                            ? room.total_saves\n                            : \"N/A\"}\n                        </td>\n                        <td>\n                          <div\n                            style={{\n                              width: \"1vw\",\n                              height: \"1vw\",\n                              borderRadius: \"0.2vw\",\n                              backgroundColor: room.availability\n                                ? \"green\"\n                                : \"red\",\n                              margin: \"0 auto\",\n                            }}\n                          ></div>\n                        </td>\n                        {member === username && (\n                          <td>\n                            <button\n                              className=\"trash-button\"\n                              onClick={() =>\n                                handleUnsaveRoom(room.room_number, room.hall)\n                              }\n                            >\n                              🗑️\n                            </button>\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              ) : (\n                <p className=\"no-saved-rooms\">\n                  {member === username\n                    ? \"You haven't saved any rooms yet.\"\n                    : `${member} has no saved rooms.`}\n                </p>\n              )}\n              {member === username && (\n                <button\n                  className=\"clear-drawn-rooms-button\"\n                  onClick={handleClearDrawnRooms}\n                >\n                  Clear All Unavailable (Drawn) Rooms From Cart\n                </button>\n              )}\n            </>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport \"../App.css\";\n\nconst InvalidRoute = () => {\n    return (\n        <div className=\"invalid-route-error-container\">\n            <h1 className=\"invalid-route-error-message\">\n                ERROR 404: Page Not Found\n            </h1>\n\n            <h3 className=\"invalid-route-error-message\">\n                Click{\" \"}\n                <a href=\"/\" className=\"back-to-floorplans\">\n                    here\n                </a>{\" \"}\n                to do a room search\n            </h3>\n        </div>\n    );\n}\n\nexport default InvalidRoute","import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\n\nconst MyGroup = ({ username }) => {\n  const [group, setGroup] = useState(null); // Group details\n  const [members, setMembers] = useState([]); // Group members\n  const [pendingMembers, setPendingMembers] = useState([]); // Pending members in the group\n  const [pendingInvites, setPendingInvites] = useState([]); // Pending invites\n  const [currentInviteIndex, setCurrentInviteIndex] = useState(0); // Index of the invite being shown\n  const [newMemberNetID, setNewMemberNetID] = useState(\"\"); // Input for adding a new member\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(\"\"); // Error message\n\n  useEffect(() => {\n    // Fetch user's group information and pending invites when the component mounts\n    fetch(\"/api/my_group\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.group_id) {\n          setGroup(data.group_id);\n          setMembers(data.members);\n\n          // Fetch pending members for the group\n          fetch(`/api/group_pending_members?group_id=${data.group_id}`)\n            .then((response) => response.json())\n            .then((pendingData) => {\n              if (pendingData.pending_members) {\n                setPendingMembers(pendingData.pending_members);\n              }\n            })\n            .catch((error) => {\n              console.error(\"Error fetching pending members:\", error);\n            });\n        } else {\n          setGroup(null);\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching group data:\", error);\n        setError(\"Failed to load group data. Please try again later.\");\n        setLoading(false);\n      });\n\n    fetch(\"/api/my_pending_invites\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.invites) {\n          setPendingInvites(data.invites);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching pending invites:\", error);\n      });\n  }, []);\n\n  const handleAcceptInvite = (groupId) => {\n    setLoading(true);\n    fetch(\"/api/accept_invite\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ group_id: groupId }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.message) {\n          setGroup(data.group_id); // Update the group state\n          setPendingInvites([]); // Clear all pending invites since the user joined a group\n\n          // Fetch updated group data and members\n          fetch(`/api/my_group`)\n            .then((response) => response.json())\n            .then((groupData) => {\n              if (groupData.group_id) {\n                setGroup(groupData.group_id);\n                setMembers(groupData.members);\n\n                // Fetch updated pending members for the group\n                fetch(\n                  `/api/group_pending_members?group_id=${groupData.group_id}`\n                )\n                  .then((response) => response.json())\n                  .then((pendingData) => {\n                    if (pendingData.pending_members) {\n                      setPendingMembers(pendingData.pending_members);\n                    }\n                    setLoading(false);\n                  })\n                  .catch((error) => {\n                    console.error(\"Error fetching pending members:\", error);\n                    setLoading(false);\n                  });\n              } else {\n                setLoading(false);\n              }\n            })\n            .catch((error) => {\n              console.error(\"Error fetching group data:\", error);\n              setError(\"Failed to fetch updated group data.\");\n              setLoading(false);\n            });\n        } else if (data.error) {\n          setError(data.error);\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error accepting invite:\", error);\n        setError(\"Failed to accept invite. Please try again later.\");\n        setLoading(false);\n      });\n  };\n\n  const handleDeclineInvite = () => {\n    const currentInvite = pendingInvites[currentInviteIndex];\n\n    setLoading(true);\n    fetch(\"/api/decline_invite\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ group_id: currentInvite.group_id }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.message) {\n          // Update the pending invites and reset the index\n          setPendingInvites((prev) => {\n            const updatedInvites = prev.filter(\n              (_, index) => index !== currentInviteIndex\n            );\n            // Adjust the index if it's the last item in the list\n            if (currentInviteIndex >= updatedInvites.length) {\n              setCurrentInviteIndex(0);\n            }\n            return updatedInvites;\n          });\n        } else if (data.error) {\n          setError(data.error);\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error declining invite:\", error);\n        setError(\"Failed to decline invite. Please try again later.\");\n        setLoading(false);\n      });\n  };\n\n  const handleRemoveInvitation = (inviteeNetID) => {\n    setLoading(true);\n    fetch(\"/api/remove_invite\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ group_id: group, invitee_netid: inviteeNetID }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.message) {\n          alert(data.message); // Notify user of success\n\n          // Update the pendingMembers state\n          setPendingMembers((prev) =>\n            prev.filter((member) => member !== inviteeNetID)\n          );\n        } else if (data.error) {\n          setError(data.error);\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error removing invitation:\", error);\n        setError(\"Failed to remove invitation. Please try again later.\");\n        setLoading(false);\n      });\n  };\n\n  const handleCreateGroup = () => {\n    setLoading(true);\n    fetch(\"/api/create_group\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ netid: username }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.group_id) {\n          setGroup(data.group_id);\n          setMembers([username]); // Initialize the group with the creator\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error creating group:\", error);\n        setError(\"Failed to create group. Please try again later.\");\n        setLoading(false);\n      });\n  };\n\n  const handleAddMember = () => {\n    // Regular expression to match two lowercase letters followed by four digits\n    const netIDRegex = /^[a-z]{2}\\d{4}$/;\n\n    if (!newMemberNetID) {\n      setError(\"Please enter a NetID.\");\n      return;\n    }\n\n    if (!netIDRegex.test(newMemberNetID)) {\n      setError(\n        \"Invalid NetID format. It must be two lowercase letters followed by four numbers.\"\n      );\n      return;\n    }\n\n    setError(\"\"); // Clear any previous error messages\n    setLoading(true);\n\n    fetch(\"/api/add_member\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ invitee: newMemberNetID }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.message) {\n          alert(data.message); // Notify user of success or failure\n\n          // Update the pendingMembers state immediately\n          setPendingMembers((prev) => [...prev, newMemberNetID]);\n\n          // Clear the input field\n          setNewMemberNetID(\"\");\n        } else if (data.error) {\n          setError(data.error);\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error adding member:\", error);\n        setError(\"Failed to send invitation. Please try again later.\");\n        setLoading(false);\n      });\n  };\n\n  const handleLeaveGroup = () => {\n    const confirmed = window.confirm(\n      \"Are you sure you want to leave this group?\"\n    );\n    if (!confirmed) return;\n\n    setLoading(true);\n    fetch(\"/api/leave_group\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.message) {\n          alert(data.message); // Notify user of success\n\n          // Reset state to initial state for \"create group\" screen\n          setGroup(null);\n          setMembers([]);\n          setPendingMembers([]);\n          setPendingInvites([]);\n          setCurrentInviteIndex(0);\n        } else if (data.error) {\n          setError(data.error);\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error leaving group:\", error);\n        setError(\"Failed to leave group. Please try again later.\");\n        setLoading(false);\n      });\n  };\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  // Show invitations one by one\n  if (\n    !group &&\n    pendingInvites.length > 0 &&\n    currentInviteIndex < pendingInvites.length\n  ) {\n    const currentInvite = pendingInvites[currentInviteIndex];\n    return (\n      <div className=\"my-group\">\n        <h1>My Group</h1>\n        <p>\n          You have been invited to join group{\" \"}\n          <strong>{currentInvite.group_id}</strong>.\n        </p>\n        <p>\n          <strong>Current Members:</strong>\n        </p>\n        <ul>\n          {currentInvite.members.map((member, index) => (\n            <li key={index}>{member}</li>\n          ))}\n        </ul>\n        <button onClick={() => handleAcceptInvite(currentInvite.group_id)}>\n          Accept\n        </button>\n        <button onClick={handleDeclineInvite}>Decline</button>\n        {error && <p className=\"error\">{error}</p>}\n      </div>\n    );\n  }\n\n  // Show \"Create Group\" option if no pending invites and not in a group\n  if (!group && pendingInvites.length === 0) {\n    return (\n      <div className=\"my-group\">\n        <h1>My Group</h1>\n        <p>You are not currently in a group.</p>\n        <button onClick={handleCreateGroup}>Create Group</button>\n        {error && <p className=\"error\">{error}</p>}\n      </div>\n    );\n  }\n\n  // Show group details\n  return (\n    <div className=\"my-group\">\n      <h1>My Group</h1>\n      <p>\n        <strong>Group ID:</strong> {group}\n      </p>\n      <p>\n        <strong>Group Members:</strong>\n      </p>\n      <ul>\n        {members.map((member, index) => (\n          <li key={index}>{member}</li>\n        ))}\n      </ul>\n      <p>\n        <strong>Pending Members:</strong>\n      </p>\n      <ul>\n        {pendingMembers.map((pendingMember, index) => (\n          <li key={index}>\n            {pendingMember}{\" \"}\n            <button\n              onClick={() => handleRemoveInvitation(pendingMember)}\n              className=\"remove-invitation\"\n            >\n              Remove Invitation\n            </button>\n          </li>\n        ))}\n      </ul>\n      <div className=\"add-member\">\n        <h2>Add Member</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Enter NetID\"\n          value={newMemberNetID}\n          onChange={(e) => setNewMemberNetID(e.target.value)}\n        />\n        <button onClick={handleAddMember}>Send Invitation</button>\n      </div>\n      <button onClick={handleLeaveGroup}>Leave Group</button>\n      {error && <p className=\"error\">{error}</p>}\n    </div>\n  );\n};\n\nexport default MyGroup;\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport FloorPlans from \"./pages/FloorPlans\"; // The page listing all floor plans\nimport FilterComponent from \"./pages/FilterComponent\";\nimport HallFloor from \"./pages/HallFloor\"; // The detailed view of Hall floor\nimport Logout from \"./pages/Logout\";\nimport UploadPDFs from \"./pages/UploadPDFs\";\nimport Footer from \"./Components/Footer\";\nimport NavBar from \"./Components/NavBar\";\nimport Cart from \"./pages/Cart\";\nimport InvalidRoute from \"./pages/InvalidRoute\";\nimport MyGroup from \"./pages/MyGroup\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [username, setUsername] = React.useState(\"\");\n  const [adminStatus, setAdminStatus] = React.useState(false);\n\n  React.useEffect(() => {\n    const auth = async () => {\n      try {\n        const response = await fetch(\"/api/user\");\n        const data = await response.json();\n        if (data.username) {\n          setUsername(data.username);\n          setAdminStatus(data.admin_status);\n          console.log(`my username is ${data.username}`);\n          console.log(`my admin status is ${data.admin_status}`);\n        } else {\n          console.alert(\"NetID is not set, retrying...\");\n          setTimeout(auth, 2000);\n        }\n      } catch (error) {\n        console.error(\"An error occurred: \", error);\n      }\n    };\n\n    auth();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <NavBar adminStatus={adminStatus} />\n\n      <Routes>\n        <Route path=\"/floorplans\" element={<FloorPlans />} />\n        <Route path=\"/\" element={<FilterComponent username={username} />} />\n        <Route\n          path=\"/floorplans/hallfloor\"\n          element={<HallFloor username={username} adminStatus={adminStatus} />}\n        />\n        {<Route path=\"/logout\" element={<Logout />}></Route>}\n        <Route\n          path=\"/upload-pdfs\"\n          element={<UploadPDFs adminStatus={adminStatus} />}\n        />\n        <Route path=\"/cart\" element={<Cart username={username} />} />\n        <Route path=\"*\" element={<InvalidRoute />} />\n        {/* TODO: this should be unavailable to admins */}\n        <Route path=\"/mygroup\" element={<MyGroup username={username} />} />\n      </Routes>\n\n      <Footer />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// kind of like the main\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}